on: [ push, pull_request ]

env:
  COMPILE_CFLAGS: -fno-pie -Werror
  PREPARE_CFLAGS: -fno-pie

jobs:
  compile:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        kernel: ["4.6", "4.5", "4.1", "3.19", "3.18", "3.17", "3.7", "3.3", "2.6.38", "2.6.36", "2.6.35", "2.6.32"]
        include:
          - kernel: "2.6.32"
            compile_cflags: -Wno-error=pointer-sign
          - kernel: "2.6.35"
            compile_cflags: -Wno-error=pointer-sign
          - kernel: "2.6.36"
            compile_cflags: -Wno-error=pointer-sign
          - kernel: "2.6.38"
            compile_cflags: -Wno-error=pointer-sign
          - kernel: "3.3"
            compile_cflags: -Wno-error=pointer-sign
          - kernel: "3.7"
            compile_cflags: -Wno-error=pointer-sign
          - kernel: "3.17"
            compile_cflags: -Wno-error=format-truncation
          - kernel: "3.18"
            compile_cflags: -Wno-error=format-truncation
          - kernel: "3.19"
            compile_cflags: -Wno-error=format-truncation
          - kernel: "4.1"
            compile_cflags: -Wno-error=format-truncation
          - kernel: "4.5"
            compile_cflags: -Wno-error=format-truncation
          - kernel: "4.6"
            compile_cflags: -Wno-error=format-truncation
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Download and configure v${{ matrix.kernel }} kernel
        run: |
          KERNELDIR=${HOME}/kernel
          KERNELROOT=${KERNELDIR}/linux-${{ matrix.kernel }}
          SERIES=$(case ${{ matrix.kernel }} in 4.*) echo v4.x;; 3.*) echo v3.x;; 2.6.*) echo v2.6;; esac)
          URL=https://cdn.kernel.org/pub/linux/kernel/${SERIES}/linux-${{ matrix.kernel }}.tar.xz
          mkdir ${KERNELDIR}
          curl ${URL} | tar xJC ${KERNELDIR}
          for VER in $(seq 5 10); do if [[ ! -f ${KERNELROOT}/include/linux/compiler-gcc${VER}.h ]]; then echo "#include <linux/compiler-gcc$(( ${VER} - 1 )).h>" > ${KERNELROOT}/include/linux/compiler-gcc${VER}.h; fi; done
          make -C ${KERNELROOT} defconfig prepare modules_prepare EXTRA_CFLAGS="${PREPARE_CFLAGS} ${{ matrix.prepare_cflags }}"

      - name: Build input-wacom for v${{ matrix.kernel }} kernel
        run: |
          KERNELDIR=${HOME}/kernel
          KERNELROOT=${KERNELDIR}/linux-${{ matrix.kernel }}
          ./autogen.sh --with-kernel=${KERNELROOT} && make V=1 EXTRA_CFLAGS="${COMPILE_CFLAGS} ${{ matrix.compile_cflags }}"

